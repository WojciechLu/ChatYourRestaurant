// <auto-generated />
using System;
using ChatYourRestaurant.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatYourRestaurant.DataAccess.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20240823134244_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("ChatYourRestaurant.Domain.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Crispy romaine lettuce, grilled chicken, and Caesar dressing topped with parmesan and croutons.",
                            Name = "Grilled Chicken Caesar Salad",
                            Price = 12.99m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Classic pizza topped with fresh mozzarella, tomatoes, and basil on a thin crust.",
                            Name = "Margherita Pizza",
                            Price = 10.50m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Juicy beef patty with lettuce, tomato, pickles, and cheddar cheese on a toasted bun.",
                            Name = "Beef Burger",
                            Price = 9.75m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Creamy pasta with pancetta, egg, and parmesan, garnished with parsley.",
                            Name = "Spaghetti Carbonara",
                            Price = 13.45m
                        },
                        new
                        {
                            Id = 5,
                            Description = "A nutritious mix of quinoa, chickpeas, avocado, and roasted vegetables with a tahini dressing.",
                            Name = "Vegan Buddha Bowl",
                            Price = 11.25m
                        },
                        new
                        {
                            Id = 6,
                            Description = "Tender chicken in a spiced tomato-based sauce served with basmati rice and naan.",
                            Name = "Chicken Tikka Masala",
                            Price = 14.00m
                        },
                        new
                        {
                            Id = 7,
                            Description = "Crispy battered fish served with golden fries and tartar sauce.",
                            Name = "Fish and Chips",
                            Price = 12.50m
                        },
                        new
                        {
                            Id = 8,
                            Description = "Assorted vegetable sushi rolls with soy sauce, wasabi, and pickled ginger.",
                            Name = "Vegetarian Sushi Platter",
                            Price = 15.00m
                        },
                        new
                        {
                            Id = 9,
                            Description = "Slow-cooked ribs smothered in tangy barbecue sauce, served with coleslaw.",
                            Name = "BBQ Ribs",
                            Price = 17.95m
                        },
                        new
                        {
                            Id = 10,
                            Description = "A refreshing mix of cucumbers, tomatoes, olives, feta cheese, and red onions with a lemon-oregano dressing.",
                            Name = "Greek Salad",
                            Price = 8.75m
                        });
                });

            modelBuilder.Entity("ChatYourRestaurant.Domain.Models.Order", b =>
                {
                    b.Property<Guid>("Oder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("MealId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Oder");

                    b.HasIndex("MealId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ChatYourRestaurant.Domain.Models.Order", b =>
                {
                    b.HasOne("ChatYourRestaurant.Domain.Models.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");
                });
#pragma warning restore 612, 618
        }
    }
}
